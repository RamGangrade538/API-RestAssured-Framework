package Restutiles;
import io.restassured.RestAssured;
import io.restassured.http.ContentType;
import io.restassured.response.Response;

import java.util.HashMap;
import java.util.Map;

public class RestUtil {
//    public Response postData(String endPoint , String payload, Map<String ,String> headers){
//        return RestAssured.given()
//                        .baseUri(endPoint)
//                        .headers(headers)
//                .body(payload)
//
//                .post()
//                .then()
//                .log()
//                .all()
//                .extract()
//                .response();
//
//
//
//    }
    public String createPayloadString(String id, String name, String country, String logo,
                                      String slogan, String headQuarters, String website, String established) {
        // Construct the payload as a JSON-formatted string
        return "{\n" +
                "  \"id\": \"" + id + "\",\n" +
                "  \"name\": \"" + name + "\",\n" +
                "  \"country\": \"" + country + "\",\n" +
                "  \"logo\": \"" + logo + "\",\n" +
                "  \"slogan\": \"" + slogan + "\",\n" +
                "  \"head_quarters\": \"" + headQuarters + "\",\n" +
                "  \"website\": \"" + website + "\",\n" +
                "  \"established\": \"" + established + "\"\n" +
                "}";
    }
    public Response postData(String endPoint, String payload, Map<String, String> headers) {
        return RestAssured.given()
                .baseUri(endPoint)
                .headers(headers)  // Add headers if necessary, or pass an empty map
                .contentType(ContentType.JSON)  // Set content type to JSON
                .body(payload)  // Send the payload as a String
                .post()
                .then()
                .log()
                .all()  // Log request and response for debugging
                .extract()
                .response();  // Extract the response
    }


    public Map<String, Object> createPayloadHashMap(String id, String name, String country, String logo,
                                                    String slogan, String headQuarters, String website, String established) {
        Map<String, Object> map = new HashMap<>();
        map.put("id", id); // Check if this is required or auto-generated by API
        map.put("name", name);
        map.put("country", country);
        map.put("logo", logo);
        map.put("slogan", slogan);
        map.put("head_quarters", headQuarters);
        map.put("website", website);
        map.put("established", established);  // Make sure the format is correct

        return map;
    }

    public Response postDataHashMap(String endPoint, Map<String, Object> payload, Map<String, String> headers) {
        return RestAssured.given()
                .baseUri(endPoint)
                .headers(headers)
                .contentType(ContentType.JSON)
                .body(payload)
                .post()
                .then()
                .log()
                .all()
                .extract()
                .response();
    }


}
